#!/usr/bin/env node

// dependencies

var app = require('../src/app');
var debug = require('debug')('handlio:server');
var http = require('http');

// initialization

var ports = {
    test: process.env.TEST_PORT || '3003',
    development: process.env.PORT || '3000'
};

var env = app.get('env');
var portEnv = ports[env];

debug('env: ' + env);

var port = parsePort(portEnv);
app.set('port', port);

var server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// exports

module.exports = server;

// private functions

function parsePort(val) {
    var port = parseInt(val, 10);

    // port number
    if (port >= 0) {
        return port;
    }

    throw new Error('Could not resolve port number.');
}

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var portMessage = 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(portMessage + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(portMessage + ' is already in use');
            process.exit(1);
            break;
        default:
            console.error(error);
            throw error;
    }
}

function onListening() {
    var address = server.address();
    var portMessage = 'port ' + address.port;
    debug('Listening on ' + portMessage);
}
